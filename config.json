{
  "name": "Pipeline Alt Text OpenAI",
  "desc": "Pipeline running Alt Text OpenAI action.",
  "version": {
    "major": 1,
    "minor": 0
  },
  "pipeline": [
    {
      "name": "Alt Text OpenAI",
      "desc": "Generating alternate texts in tags of given PDF document.",
      "path": "user-defined command folder",
      "category": "Accessibility",
      "program": "run.sh",
      "stdout": "",
      "stderr": "",
      "returnCodes" : [0],
      "configurations": [
        {
          "args": [
            "--input",
            "${Input PDF}",
            "--output",
            "${Output PDF}",
            "--openai",
            "${OpenAI}"
          ],
          "name": "Runs trial",
          "desc": "Runs trial"
        },
        {
          "args": [
            "--input",
            "${Input PDF}",
            "--output",
            "${Output PDF}",
            "--openai",
            "${OpenAI}",
            "--name",
            "${License Name}",
            "--key",
            "${License Key}"
          ],
          "name": "Runs with license",
          "desc": "Runs with license"
        },
        {
          "args": [
            "--input",
            "${Input PDF}",
            "--output",
            "${Output PDF}",
            "--openai",
            "${OpenAI}",
            "--name",
            "${License Name}",
            "--key",
            "${License Key}",
            "--overwrite"
          ],
          "name": "Runs with license and overwrite",
          "desc": "Runs with license and overwrite"
        },
        {
          "args": [
            "--build",
            "--input",
            "${Input PDF}",
            "--output",
            "${Output PDF}",
            "--openai",
            "${OpenAI}"
          ],
          "name": "Runs trial with forced build",
          "desc": "Runs trial with forced build"
        },
        {
          "args": [
            "--build",
            "--input",
            "${Input PDF}",
            "--output",
            "${Output PDF}",
            "--openai",
            "${OpenAI}",
            "--name",
            "${License Name}",
            "--key",
            "${License Key}"
          ],
          "name": "Runs with license and forced build",
          "desc": "Runs with license and forced build"
        },
        {
          "args": [
            "--build",
            "--input",
            "${Input PDF}",
            "--output",
            "${Output PDF}",
            "--openai",
            "${OpenAI}",
            "--name",
            "${License Name}",
            "--key",
            "${License Key}",
            "--overwrite"
          ],
          "name": "Runs with license,overwrite and forced build",
          "desc": "Runs with license,overwrite and forced build"
        }
      ],
      "configuration": {
        "args": [
            "--input",
            "${Input PDF}",
            "--output",
            "${Output PDF}",
            "--openai",
            "${OpenAI}",
            "--name",
            "${License Name}",
            "--key",
            "${License Key}"
          ],
          "name": "Runs with license",
          "desc": "Runs with license"
      },
      "args": [
        {
          "name": "Input PDF",
          "desc": "Input PDF file",
          "flags": 2,
          "ext": "pdf",
          "type": "file_path",
          "value": "user-defined file path"
        },
        {
          "name": "Output PDF",
          "desc": "Output PDF file.",
          "flags": 4,
          "ext": "pdf",
          "type": "file_path_save",
          "value": "user-defined file path"
        },
        {
          "name": "OpenAI",
          "desc": "OpenAI API key",
          "type": "string",
          "value": ""
        },
        {
          "name": "License Name",
          "desc": "License name.",
          "type": "string",
          "value": ""
        },
        {
          "name": "License Key",
          "desc": "License key.",
          "type": "string",
          "value": ""
        }
      ]
    }
  ]
}